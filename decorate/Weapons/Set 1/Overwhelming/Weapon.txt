/*
CREDITS:

Tracer model by Revilution\Zanieon, texture happily snapped from Quake 4 (ID Software)

Sprites:
Source - Brink (Splash Damage)
Rip - Sinael
Refinement by me, Pillow!

Sounds:
Up, health racking up - Epic Games (UT99)
Rev up, fire, stop down on both fire modes - Valve (Left 4 Dead)
AddLoop - Call of Duty (Infinity Ward)
Additional firing clip - ? (I got those from FPSBanana before it ker-crashed and turned into Gamebanana, soooo... couldn't find them again.)
*/

Actor OverwhelmingCycle : Inventory { Inventory.MaxAmount 4 } //Used for firing animation.
Actor OverMode : Inventory { Inventory.MaxAmount 1 } //Vinny: Homing boolets... HOMING BOOLETS!!

//Dispenser stuff.
Actor DispenserOut : Inventory { Inventory.MaxAmount 1 }
Actor DispenserDetonate : Inventory { Inventory.MaxAmount 1 }
Actor DispenserCharge : Inventory { Inventory.MaxAmount 999 }

actor PowerOverwhelmingGiver : CustomInventory
{
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You've got the ''Power Overwhelming'' minigun! HOMING BOLLETS,I REPEAT,HOMING BOLLETS AND RESTORE AMMO MENAWHILE YOU SHOOT!"
	Obituary "%k power overwhelmed %o."
	States
	{
	Spawn:
		OVRG X 1 
		Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("PowerOverwhelming",1,"JustAmmo")
  All:
	TNT1 A 0 A_GiveInventory("PowerOverwhelming",1)
	Stop
  JustAmmo:
	TNT1 A 0 A_GiveInventory("TankShellAmmo",10)
  Remove:
    TNT1 A 0
    Stop
	}
}

Actor PowerOverwhelming : ROWeapon 24505
{
	//$Category Weapons
	//$Title Power Overwhelming
	//$Sprite OVRGX0
	Tag "Power Overwhelming"
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You've got the ''Power Overwhelming'' minigun! HOMING BOLLETS,I REPEAT,HOMING BOLLETS AND RESTORE AMMO MENAWHILE YOU SHOOT!"
	Obituary "%k power overwhelmed %o."
	weapon.UpSound "Overwhelming/Up"
	Weapon.SelectionOrder 5
	Weapon.AmmoType "Boolet"
	Weapon.AmmoGive 100
	Weapon.AmmoUse 1
	Weapon.AmmoType2 "TankShellAmmo"
	Weapon.AmmoGive2 10
	Weapon.AmmoUse2 1
	Weapon.Kickback 50
	Weapon.SlotNumber 4
	Weapon.SlotPriority 29.0
	Weapon.BobStyle "InverseSmooth"
	Weapon.BobSpeed 1.2
	Weapon.BobRangeY 0.6
	Weapon.BobRangeX 1.2
	Scale 0.55
	States
	{
	Spawn:
		OVRG X -1
		Stop
	Ready:
		OVRG A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM)
		Loop
	Deselect:
		TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,11,1,0)
	DeselectLoop:
		OVRG A 0 {
			A_StopSound(5);
			A_StopSound(6);
			A_ZoomFactor(1.0);
		}
		OVRG A 1 A_Lower(12)
		Wait
	Select:
		TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,10,1,0)
		OVRG A 0 {
			If(random(1,100) <= GetCvar("RO_Voices")) {
				A_PlaySound("Overwhelming/Taunt",2);
			}
		}
	SelectMain:
		OVRG A 1 A_Raise(12)
		Wait
		
	//Primary
	Fire:
		OVRG A 0 A_PlaySound("Overwhelming/Start",5)
		OVRG BCD 3 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); A_AlertMonsters; }
		OVRG AB 2 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); A_AlertMonsters; }
		OVRG CD 2 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); A_AlertMonsters; }
		OVRG ABCD 1 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); A_AlertMonsters; }
		OVRG ABCDABCD 1 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); A_AlertMonsters; }
	Hold:
		OVRG A 0 {
			A_PlaySound("Overwhelming/Loop",5,0.6,1);
			A_PlaySound("Overwhelming/AddLoop",6,0.6,1);
			A_GiveInventory("OverwhelmingCycle",1);
			if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); }
		}
		OVRF A 0 A_JumpIf(CountInv("OverwhelmingCycle") == 1, "FireMain")
		OVRF B 0 A_JumpIf(CountInv("OverwhelmingCycle") == 2, "FireMain")
		OVRF C 0 A_JumpIf(CountInv("OverwhelmingCycle") == 3, "FireMain")
		OVRF D 0 A_JumpIf(CountInv("OverwhelmingCycle") == 4, "FireMainReset")
	FireMainReset:
		"####" "#" 0 A_TakeInventory("OverwhelmingCycle",4)
		Goto FireMain
	FireMain:
		"####" "#" 1 Bright {
			A_WeaponOffset(10.0 + frandom(6.0, -6.0), 42.0 + frandom(5.0, -5.0), WOF_INTERPOLATE);
			A_GunFlash;
			A_Recoil(0.35);
			if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(1,1,2,15,0,128,"none",QF_SCALEDOWN); }
			A_SetAngle(Angle - frandom(0.1,0.2)*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - frandom(0.15,0.3)*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_GiveInventory("BooletCasing",1);
			
			If(!CountInv("CaliberUpgrade"))
			{
				A_FireBullets(5.0,3.0,2,0,"none",FBF_USEAMMO,8192,"OverwhelmingTracer",0,8);
			}
			Else {
				A_FireBullets(5.0,3.0,2,0,"none",FBF_USEAMMO,8192,"CaliberOverwhelmingTracer",0,8);
			}
		}
		"####" "#" 0 A_ReFire("Hold")
		Goto FireStop
	FireStop:
		OVRG A 0 {
			A_WeaponOffset(10.0, 42.0, WOF_INTERPOLATE);
			A_PlaySound("Overwhelming/Stop",5,0.6);
			A_StopSound(6);
			A_ZoomFactor(1.0);
		}
		OVRG ABCD 1 { A_WeaponOffset(-1.0,-1.0,WOF_ADD|WOF_INTERPOLATE); A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG ABCD 1 { A_WeaponOffset(-1.0,-1.0,WOF_ADD|WOF_INTERPOLATE); A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG AB 1 { A_WeaponOffset(-1.0,-1.0,WOF_ADD|WOF_INTERPOLATE); A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG CD 1 { A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }

		OVRG ABCD 2 { A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG ABCD 2 { A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG AB 3 { A_ReFire("Hold"); A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		OVRG CD 4 { A_WeaponReady(WRF_NOFIRE|WRF_NOBOB); }
		Goto Ready
	AltFire:
		OVRF A 1 Bright {
			A_GunFlash;
			A_Recoil(1.0);
			A_AlertMonsters;
			A_WeaponOffset(7.0 + frandom(3.0,-3.0),39.0 + frandom(3.0,-2.0), WOF_INTERPOLATE);
			//A_PlaySound("Weapons/PushkaAltFire",1);
			A_PlaySound("Weapons/PushkaFire",5);
			A_PlaySound("Weapons/PushkaFireAdd",6,0.8);
			if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(1,1,1,12,0,128,"",QF_SCALEDOWN); }
			A_FireCustomMissile("TankShellBall",frandom(3.0,-3.0),1,10,0,0,frandom(3.0,-3.0));
			A_SetAngle(Angle - 1.0*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 1.0*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		OVRF B 1 Bright { A_WeaponOffset(5.0 + frandom(2.0,-2.0), 37.0 + frandom(2.0,-2.0), WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		OVRG C 1 Bright { A_WeaponOffset(6.0 + frandom(1.0,-1.0), 38.0 + frandom(1.0,-1.0), WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		OVRG D 1 Bright { A_WeaponOffset(5.0, 37.0, WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); } }
		OVRG A 0 A_ReFire
		OVRG A 1 {
			if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			A_WeaponOffset(-1.0, -1.0, WOF_ADD);
		}
		OVRG A 1 {
			if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.995); }
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			A_WeaponOffset(-1.0, -1.0, WOF_ADD);
		}
		OVRG B 1 {
			if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(1.0); }
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			A_WeaponOffset(-1.0, -1.0, WOF_ADD);
		}
		OVRG BC 1 {
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			A_WeaponOffset(-1.0, -1.0, WOF_ADD);
		}
		OVRG CDD 1 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		Goto Ready

	Reload:
		OVRG A 0 A_JumpIf(CountInv("DispenserOut"),"UnReload")
		OVRG A 0 {
			A_GiveInventory("DispenserOut",1);
			A_SpawnItemEx("OverwhelmingDispenserSpawner",0,0,20,0,0,0,0,SXF_SETTARGET|SXF_TRANSFERTRANSLATION);
			A_PlaySound("Items/Throw",1);
		}
		OVRG A 35 A_Weaponready(WRF_NOSWITCH|WRF_NOBOB|WRF_NOSWITCH)
		Goto ready
	UnReload:
		OVRG A 0 A_PlaySound("Steamroller/Trigger",5)
		
		OVRG A 1 A_WeaponOffset(1.0, 1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(2.0, 3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 0 A_GiveInventory("DispenserDetonate",1)
		OVRG A 1 A_WeaponOffset(3.0, 3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(3.0, 2.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(1.0, 1.0, WOF_ADD|WOF_INTERPOLATE)
		
		OVRG A 1 A_WeaponOffset(-1.0, -1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-3.0, -2.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-3.0, -3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 0 A_TakeInventory("DispenserDetonate",1)
		OVRG A 1 A_WeaponOffset(-2.0, -3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-1.0, -1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 10 A_Weaponready(WRF_NOSWITCH|WRF_NOBOB|WRF_NOSWITCH)
		Goto ready

	Zoom:
		OVRG A 0 {
			A_PlaySound("Overwhelming/Mode",6,0.8);
			if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(1,1,2,7,0,2,"none",QF_SCALEDOWN); }
		}
		
		OVRG A 1 A_WeaponOffset(1.0, 1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(2.0, 3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(3.0, 4.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(3.0, 3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(3.0, 2.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(1.0, 1.0, WOF_ADD|WOF_INTERPOLATE)
		
		OVRG A 0 A_JumpIfInventory("OverMode",1,"UnZoom")
		OVRG A 0 A_GiveInventory("OverMode",1)
		OVRG A 0 A_Print("\c[white]Homing boolets mode \c[green]on.")
		Goto ZoomFinish
	UnZoom:
		OVRG A 0 A_TakeInventory("OverMode",1)
		OVRG A 0 A_Print("\c[white]Homing boolets mode \c[red]off.")
		Goto ZoomFinish
	ZoomFinish:
		OVRG A 1 A_WeaponOffset(-1.0, -1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-3.0, -2.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-3.0, -3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-3.0, -4.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-2.0, -3.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 1 A_WeaponOffset(-1.0, -1.0, WOF_ADD|WOF_INTERPOLATE)
		OVRG A 10 A_Weaponready(WRF_NOSWITCH|WRF_NOBOB|WRF_NOSWITCH)
		Goto ready

	Flash:
		TNT1 A 1 A_Light(random(1,3))
		TNT1 A 2 A_Light1
		TNT1 A 3 A_Light2
		TNT1 A 0 A_Light0
		Stop
	AltFlash:
		TNT1 A 6 A_Light1
		TNT1 A 3 A_Light2
		TNT1 A 0 A_Light0
		Stop
	}
}