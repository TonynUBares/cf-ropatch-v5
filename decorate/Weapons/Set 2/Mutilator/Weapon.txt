/*
CREDITS:
Beheaded Kamikaze - Croteam

Weapon Sprites - Inferno Interactive (Shadow Warrior Expansion, Ripped by Zero X. Diamond)
Kamikaze Sprites - Captain Toenail
Tornado Sprites - Raven Software (Heretic)

Sounds:
Up - Mashup. One part by Epic Games (UT2004)
Idle, Start, Loop, End, Click - ? (Not sure, but I give my bets for Gore: Ultimate Soldier by 4D Rulers?)
Boom - ? (No ducking idea, found it on friend's old hardware, heh.)
Air Throw - ?
Air End - EA (C&C Generals)

Special thanks to Zdoom IRC's dwellers for a little brainstorming, as that
helped me to spawn the new, atrocious firing mode for this thing!
*/

actor MutilatorCounter : Ammo
{
	Inventory.Amount 0
	Inventory.MaxAmount 6
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 6
	Inventory.Icon "TNT1A0"
}

actor MutilatorTrigger : Inventory { Inventory.MaxAmount 1 }
actor MutilatorMode :	 Inventory { Inventory.MaxAmount 2 }


actor MutilatorGiver : CustomInventory
{
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the ''Mutilator'' Mark MMMMCLXXV explosive agitation cannon! This version is surely better than Mark MMMMCLXXIV! (6)"
	Obituary "%o got his ears exploded, thanks to $k's ''Mutilator''."
	States
	{
	Spawn:
		NLMG X 1 
		Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("Mutilator",1,"JustAmmo")
  All:
	TNT1 A 0 A_GiveInventory("Mutilator",1)
	Stop
  JustAmmo:
	TNT1 A 0 A_GiveInventory("RawketAmmo",20)
  Remove:
    TNT1 A 0
    Stop
	}
}

ACTOR Mutilator : Weapon 24523
{
	//$Category Weapons
	//$Title Mutilator
	//$Sprite NLMGX0
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the ''Mutilator'' Mark MMMMCLXXV explosive agitation cannon! This version is surely better than Mark MMMMCLXXIV! (6)"
	Obituary "%o got his ears exploded, thanks to $k's ''Mutilator''."
	Weapon.UpSound "Weapons/MutilatorUp"
	Weapon.SelectionOrder 3
	Weapon.AmmoGive 20
	Weapon.AmmoType "RawketAmmo"
	Weapon.AmmoUse 1
	Weapon.AmmoUse2 0
	Weapon.AmmoType2 "MutilatorCounter"
	Weapon.AmmoGive2 0
	Weapon.Kickback 30
	Weapon.SlotNumber 6
	Weapon.SlotPriority 26.0
	Weapon.BobStyle "InverseSmooth"
	Weapon.BobSpeed 1.2
	Weapon.BobRangeY 0.6
	Weapon.BobRangeX 1.2
	Scale 0.65
	+NOAUTOFIRE
	+AMMO_OPTIONAL
	States
	{
	Spawn:
		NLMG X -1
		Stop
	NoAmmo:
		NLMG A 0
		Goto Ready
	Ready:
		NLMG A 0 A_PlaySound("weapons/MutilatorIdle",5,1.0,1)
		NLMG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		Loop
   Deselect:
   	TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,1,1,0)
	DeselectLoop:
		NLMG A 0 {
			A_TakeInventory("MutilatorTrigger",1);
			A_StopSound(6);
			A_StopSound(5);
			A_ZoomFactor(1.0);
		}
		NLMG A 1 A_Lower(12)
		Wait
	Select:
		TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,0,1,0)
	SelectLoop:
		NLMG A 1 A_Raise(12)
		Loop
	Fire:
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",1,"PrimeBlastAttack")
		NLMG A 0 A_JumpIfInventory("RawketAmmo",2,1)
		Goto NoAmmo
		NLMG B 5 A_PlaySound("Weapons/MutilatorStart",1)
		NLMG B 1 { If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		NLMG B 1 { If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		NLMG B 0 A_StopSound(5)
	Hold:
		NLMG B 0 {
			if(CountInv("MutilatorMode") <= 0 || CountInv("MutilatorMode") >= 2) {
				A_PlaySound("weapons/MutilatorLoop",5,1.0,1);
				A_PlaySound("weapons/MutilatorALoop",6,0.7,1);
			} else {
				A_PlaySound("Weapons/MutilatorAirstream",5,1.0,1);
			}
		}
		NLMG B 0 A_JumpIfNoAmmo("Endo")
		NLMG B 1 {
			A_WeaponOffset(8,40,WOF_INTERPOLATE);
			if(CountInv("MutilatorMode") >= 2) {
				A_FireCustomMissile("MutilatorBoom",frandom(4.0,-4.0),1,10,-5,0,frandom(2.0,-2.0));
				
			} else if(CountInv("MutilatorMode") == 1) {
				A_FireCustomMissile("MutilatorAirflector",frandom(4.0,-4.0),0,10,-5,0,frandom(2.0,-2.0));
			} else {
				A_FireCustomMissile("Kamikazenado",frandom(4.0,-4.0),1,10,-5,0,frandom(2.0,-2.0));
			}
			If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.93); }
			A_Recoil(1.0);
			A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE);
		}
		NLMG B 1 A_WeaponOffset(12,44,WOF_INTERPOLATE)
		NLMG B 1 {
			A_WeaponOffset(16,48,WOF_INTERPOLATE);
			if(CountInv("MutilatorMode") >= 2) {
				A_FireCustomMissile("MutilatorBoom",frandom(4.0,-4.0),0,10,-5,0,frandom(2.0,-2.0));
				
			} else if(CountInv("MutilatorMode") == 1) {
				A_FireCustomMissile("MutilatorAirflector",frandom(4.0,-4.0),0,10,-5,0,frandom(2.0,-2.0));
			} else {
				A_FireCustomMissile("Kamikazenado",frandom(4.0,-4.0),0,10,-5,0,frandom(2.0,-2.0));
			}
			If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.94); }
			A_Recoil(1.0);
			A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE);
		}
		NLMG B 1 A_WeaponOffset(12,44,WOF_INTERPOLATE)
		NLMG A 0 A_Refire("Hold")
	Endo:
		NLMG A 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		NLMG A 1 { A_WeaponOffset(5,37,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.96); } }
		NLMG A 1 { A_WeaponOffset(4,36,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		NLMG A 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); } }
		NLMG A 1 { A_WeaponOffset(2,34,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.99); } }
		NLMG A 1 { A_WeaponOffset(1,33,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.995); } }
		NLMG A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(1.0); } }
		NLMG A 0 {
			A_StopSound(6);
			A_StopSound(5);
			A_PlaySound("weapons/MutilatorEnd",1);
			A_ClearReFire;
		}
		NLMG A 24 A_WeaponReady(WRF_NOSWITCH|WRF_ALLOWRELOAD)
		NLMG A 0 A_PlaySound("Weapons/MutilatorIdle",5,1.0,1)
		NLMG A 8 A_WeaponReady(WRF_NOSWITCH|WRF_ALLOWRELOAD)
		NLMG A 0 A_ClearReFire
		Goto Ready
	AltFire:
		NLMG A 2 {
			A_PlaySound("Weapons/MutilatorClick",5);
			A_PlaySound("Weapons/ErasusShellStart",6);
		}
		NLMG BC 2
		NLMG B 0 A_ReFire("Charging")
		Goto AirBlast
	Charging:
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",6,"AirBlast")
		NLMG A 0 {
			A_PlaySound("Weapons/ErasusShellLoop",6,1.0,1);
			A_GiveInventory("MutilatorCounter",1);
			If(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(2,2,3,11,0,6,"none"); }
		}
		NLMG CCCCCCCCCCCC 1 { A_WeaponOffset(0+frandom(5.0,-5.0),32+frandom(5.0,-5.0),WOF_INTERPOLATE); Return A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "ChargingStop"); }
		NLMG A 0 A_ReFire("Charging")
		Goto AirBlast
	ChargingStop:
		NLMG A 0 {
			If(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(2,2,3,11,0,6,"none",QF_SCALEDOWN); }
			A_PlaySound("Weapons/ErasusShellStop",6);
			A_TakeInventory("MutilatorTrigger",1);
			A_WeaponOffset(0,32,WOF_INTERPOLATE);
		}
		NLMG CBA 2
		NLMG A 8 A_ClearRefire
		Goto Ready
	AirBlast:
		NLMG A 0 {
			A_WeaponOffset(0,32,WOF_INTERPOLATE);
			A_StopSound(6);
			A_PlaySound("Weapons/MutilatorBlast",1,0.9);
		}
		NLMG CCCC 1 A_SetPitch(pitch+6.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE)
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",6,"6AirBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",5,"5AirBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",4,"4AirBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",3,"3AirBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",2,"2AirBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",1,"1AirBlast")
	0AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 15);
			A_Recoil(-10);
		}
		Goto AirBlastAnim+6
	1AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 20);
			A_Recoil(-15);
		}
		Goto AirBlastAnim+5
	2AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 25);
			A_Recoil(-20);
		}
		Goto AirBlastAnim+4
	3AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 30);
			A_Recoil(-25);
		}
		Goto AirBlastAnim+3
	4AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 35);
			A_Recoil(-30);
		}
		Goto AirBlastAnim+2
	5AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 40);
			A_Recoil(-35);
		}
		Goto AirBlastAnim+1
	6AirBlast:
		NLMG A 0 {
			A_ChangeVelocity(0, 0, 45);
			A_Recoil(-40);
		}
		Goto AirBlastAnim
   AirBlastAnim:
		NLMG C 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(12,44,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(16,48,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(12,44,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); A_SetPitch(pitch-4.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		NLMG B 1 { A_WeaponOffset(5,37,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.96); } }
		NLMG B 1 { A_WeaponOffset(4,36,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		NLMG B 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); } }
		NLMG A 1 { A_WeaponOffset(2,34,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.99); } }
		NLMG A 1 { A_WeaponOffset(1,33,WOF_INTERPOLATE); A_FireCustomMissile("MutilatorAirblast",0,0,10,-5,0,0); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.995); } A_TakeInventory("MutilatorCounter",9); }
		NLMG A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_ZoomFactor(1.0); A_StopSound(6); }
		Goto Ready

   PrimeBlastAttack:
		NLMG A 2 A_PlaySound("Weapons/MutilatorClick",5)
		NLMG B 2
		NLMG A 0 A_JumpIf(CountInv("MutilatorMode") == 1, "AirBlast")
		NLMG A 0 {
			A_PlaySound("weapons/MutilatorEnd",6);
			A_PlaySound("Weapons/MutilatorBoom",1,0.7);
		}
		NLMG A 0 A_JumpIf(CountInv("MutilatorMode") >= 2, "ExploBlast")
	KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",6,"6KamikazeBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",5,"5KamikazeBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",4,"4KamikazeBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",3,"3KamikazeBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",2,"2KamikazeBlast")
		NLMG A 0 A_JumpIfInventory("MutilatorCounter",1,"1KamikazeBlast")
		NLMG B 4
		Goto Ready
	1KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",2,1)
		Goto AirBlast
		NLMG AAAA 0 A_FireCustomMissile("Kamikazenado",frandom(5.0,-5.0),0,10,-5,0,frandom(3.0,-3.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",2);
			A_Recoil(6.0);
		}
		Goto KamikazeBlastAnim+5
	2KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",3,1)
		Goto AirBlast
		NLMG AAAAAAAA 0 A_FireCustomMissile("Kamikazenado",frandom(6.0,-6.0),0,10,-5,0,frandom(3.5,-3.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",3);
			A_Recoil(8.0);
		}
		Goto KamikazeBlastAnim+4
	3KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",4,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAA 0 A_FireCustomMissile("Kamikazenado",frandom(7.0,-7.0),0,10,-5,0,frandom(4.0,-4.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",4);
			A_Recoil(11.0);
		}
		Goto KamikazeBlastAnim+3
	4KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",5,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAAAAAA 0 A_FireCustomMissile("Kamikazenado",frandom(8.0,-8.0),0,10,-5,0,frandom(4.5,-4.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",5);
			A_Recoil(14.0);
		}
		Goto KamikazeBlastAnim+2
	5KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",6,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAAAAAAAAAA 0 A_FireCustomMissile("Kamikazenado",frandom(9.0,-9.0),0,10,-5,0,frandom(5.0,-5.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",6);
			A_Recoil(16.0);
		}
		Goto KamikazeBlastAnim+1
	6KamikazeBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",7,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAAAAAAAAAAAAAA 0 A_FireCustomMissile("Kamikazenado",frandom(10.0,-10.0),0,10,-5,0,frandom(5.5,-5.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",7);
			A_Recoil(18.0);
		}
		Goto KamikazeBlastAnim
   KamikazeBlastAnim:
		NLMG C 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(12,44,WOF_INTERPOLATE); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(16,48,WOF_INTERPOLATE); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(12,44,WOF_INTERPOLATE); A_SetPitch(pitch-5.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
		NLMG C 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); A_SetPitch(pitch-4.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		NLMG B 1 { A_WeaponOffset(5,37,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.96); } }
		NLMG B 1 { A_WeaponOffset(4,36,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		NLMG B 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); } }
		NLMG A 1 { A_WeaponOffset(2,34,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.99); } }
		NLMG A 1 { A_WeaponOffset(1,33,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.995); } A_TakeInventory("MutilatorCounter",9); }
		NLMG A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); If(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(1.0); } A_StopSound(6); }
		NLMG A 24 A_WeaponReady(WRF_NOSWITCH|WRF_ALLOWRELOAD)
		NLMG A 0 A_PlaySound("Weapons/MutilatorIdle",5,1.0,1)
		NLMG A 8 A_WeaponReady(WRF_ALLOWRELOAD)
		Goto Ready
	
	  
   ExploBlast:
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",6,"6ExploBlast")
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",5,"5ExploBlast")
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",4,"4ExploBlast")
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",3,"3ExploBlast")
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",2,"2ExploBlast")
      NLMG A 0 A_JumpIfInventory("MutilatorCounter",1,"1ExploBlast")
      NLMG B 4
      Goto Ready
	1ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",2,1)
		Goto AirBlast
		NLMG AAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(5.0,-5.0),0,10,-5,0,frandom(3.0,-3.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",2);
			A_Recoil(6.0);
		}
		Goto KamikazeBlastAnim+5
	2ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",3,1)
		Goto AirBlast
		NLMG AAAAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(6.0,-6.0),0,10,-5,0,frandom(3.5,-3.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",3);
			A_Recoil(8.0);
		}
		Goto KamikazeBlastAnim+4
	3ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",4,1)
		Goto AirBlast
		NLMG AAAAAAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(7.0,-7.0),0,10,-5,0,frandom(4.0,-4.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",4);
			A_Recoil(11.0);
		}
		Goto KamikazeBlastAnim+3
	4ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",5,1)
		Goto AirBlast
		NLMG AAAAAAAAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(8.0,-8.0),0,10,-5,0,frandom(4.5,-4.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",5);
			A_Recoil(14.0);
		}
		Goto KamikazeBlastAnim+2
	5ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",6,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(9.0,-9.0),0,10,-5,0,frandom(5.0,-5.0))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",6);
			A_Recoil(16.0);
		}
		Goto KamikazeBlastAnim+1
	6ExploBlast:
		NLMG A 0 A_JumpIfInventory("RawketAmmo",7,1)
		Goto AirBlast
		NLMG AAAAAAAAAAAAAA 0 A_FireCustomMissile("MutilatorBoom",frandom(10.0,-10.0),0,10,-5,0,frandom(5.5,-5.5))
		NLMG A 0 {	
			A_TakeInventory("RawketAmmo",7);
			A_Recoil(18.0);
		}
		Goto KamikazeBlastAnim
   Reload:
      NLMG A 0 A_JumpIfInventory("MutilatorMode",2,"UnReload")
      NLMG A 0 A_JumpIfInventory("MutilatorMode",1,"MadeOfExplodium")
      NLMG A 0 A_Print("Airsoft Cuddly Towers Mode.")
      NLMG A 0 A_GiveInventory("MutilatorMode",1)
      Goto HNNNNNNG
   MadeOfExplodium:
      NLMG A 0 A_Print("Master Exploder Mode.")
      NLMG A 0 A_GiveInventory("MutilatorMode",1)
	  Goto HNNNNNNG
   UnReload:
      NLMG A 0 A_Print("Exploding Agitation Mode.")
      NLMG A 0 A_TakeInventory("MutilatorMode",2)
      Goto HNNNNNNG
   HNNNNNNG:
      NLMG A 0 A_PlaySound("Weapons/MutilatorClick",6)
      NLMG A 1 { A_WeaponOffset(1,33,WOF_INTERPOLATE); A_SetPitch(pitch+1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); A_SetPitch(pitch+2.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(5,37,WOF_INTERPOLATE); A_SetPitch(pitch+3.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(6,38,WOF_INTERPOLATE); A_SetPitch(pitch+2.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 5 A_WeaponOffset(7,39,WOF_INTERPOLATE)
      NLMG A 1 { A_WeaponOffset(8,40,WOF_INTERPOLATE); A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(9,41,WOF_INTERPOLATE); A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(7,39,WOF_INTERPOLATE); A_SetPitch(pitch-2.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(5,37,WOF_INTERPOLATE); A_SetPitch(pitch-2.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 { A_WeaponOffset(1,33,WOF_INTERPOLATE); A_SetPitch(pitch-1.0*GetCvar("RO_WeaponRecoil"),SPF_INTERPOLATE); }
      NLMG A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE)
      Goto Ready
   }
}