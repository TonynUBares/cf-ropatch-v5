/*
CREDITS:
AHTATATATA - Kenshiro, Fist of the North Star
BSOD Punch - Dasboschitt
Sparta Kick - 300
Bicycle Kick - Mortal Kombat, Liu Kang's signature move

Punch'n'Kick sounds - LucasArts, Raven (SW JKIII:JA)
*/

actor KenshiroTrigger : Inventory { Inventory.MaxAmount 1 }
actor KleinerTrigger : KenshiroTrigger {}
actor SpartaTrigger : KenshiroTrigger {}
actor BicycleTrigger : KenshiroTrigger {}

actor MartyPunchCounter : Inventory { Inventory.MaxAmount 999 }
actor MartyKickCounter : MartyPunchCounter {}

actor TreesFists : Weapon
{
	Tag "Tree-Kwon-Do"
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Save the trees? Dude, they are our oppresors! Mind-controlled jerks without tinfoil hats known as ecologists made us think that we need them! (1)"
	Obituary "%o stumbled in %k's way, just in %h's tree-beat-up time."
	Weapon.UpSound "Weapons/MartyFistUp"
	Weapon.SelectionOrder 8
	Weapon.SlotNumber 1
	Weapon.Kickback 150
	AttackSound ""
	Weapon.BobStyle "Smooth"
	Weapon.BobSpeed 1.8
	Weapon.BobRangeY 0.6
	Weapon.BobRangeX 1.2
	+NOALERT
	+WEAPON.CHEATNOTWEAPON
	//+NOAUTOFIRE
	States
	{
	Spawn:
		MMEL A -1
		Loop
	FistMirror:
		PNC1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1)
		PNC1 A 0 A_OverlayFlags(OverlayID(),PSPF_ADDWEAPON,0)
		PNC1 A 1 A_OverlayOffset(OverlayID(),213,156+32)
		PNC1 B 1 A_OverlayOffset(OverlayID(),193,112+32,WOF_INTERPOLATE)
		PNC1 C 1 A_OverlayOffset(OverlayID(),160,76+32,WOF_INTERPOLATE)
		PNC1 CCC 1 A_OverlayOffset(OverlayID(),160+frandom(3.0,-3.0),76+32+frandom(3.0,-3.0),WOF_INTERPOLATE)
		PNC1 B 1 A_OverlayOffset(OverlayID(),193,112+32,WOF_INTERPOLATE)
		PNC1 A 1 A_OverlayOffset(OverlayID(),213,156+32,WOF_INTERPOLATE)
		Stop
	Ready:
		PNC1 A 0 A_Overlay(2,"FistMirror")
		PNC1 A 1 A_WeaponOffset(213,156+32)
		PNC1 B 1 A_WeaponOffset(193,112+32,WOF_INTERPOLATE)
		PNC1 C 1 A_WeaponOffset(160,76+32,WOF_INTERPOLATE)
		PNC1 C 0 A_CustomPunch(100,0,0,"MartyPunchPuff",75+random(15,-15))
		PNC1 C 0 A_CustomPunch(100,0,0,"MartyPunchPuffLeft",75+random(15,-15))
		PNC1 CCC 1 A_WeaponOffset(160+frandom(3.0,-3.0),76+32+frandom(3.0,-3.0),WOF_INTERPOLATE)
		PNC1 B 1 A_WeaponOffset(193,112+32,WOF_INTERPOLATE)
		PNC1 A 1 A_WeaponOffset(213,156+32,WOF_INTERPOLATE)
		MFST B 0 A_Overlay(2,"FistIdle")
	ReadyMain:
		MFST B 1 A_WeaponReady
		Loop		
	Deselect:
		TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,1,1,0)
	DeselectLoop:
		TNT1 A 0 {
			A_ChangeFlag("NOGRAVITY",0);
			A_ChangeFlag("FLOAT",0);
			A_TakeInventory("MartyKickCounter",0);
			A_TakeInventory("MartyPunchCounter",0);
			//ACS_NamedTerminate("ComboControl");
			A_TakeInventory("RoTreesComboScript", 1);
			A_Overlay(2,"FistIdle");
		}
		MFST B 1 A_Lower(18)
		Loop
	FistIdle:
		MFST B 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1)
		MFST B 1
		Wait
	Select:
		TNT1 A 0 ACS_NamedExecuteAlways("SbarinfoFix",0,0,1,0)
	SelectLoop:
		TNT1 A 0 {
			A_ChangeFlag("NOGRAVITY",0);
			A_ChangeFlag("FLOAT",0);
			A_GiveInventory("RoTreesComboScript", 1);
			// ACS_NamedExecuteAlways("ComboControl",0,2);
			// ACS_NamedExecuteAlways("RO Combo Display",0,2);
		}
		TNT1 A 1 A_Raise(100)
		Wait
	FistEnter:
		MFST B 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
			A_OverlayFlags(OverlayID(),PSPF_ADDWEAPON,0);
		}
		MFST B 1 A_OverlayOffset(OverlayID(),10,3+32,WOF_INTERPOLATE)
		MFST B 1 A_OverlayOffset(OverlayID(),20,8+32,WOF_INTERPOLATE)
		Stop
		
	//Punching
	Fire:
		MFST B 0 A_Overlay(2,"FistEnter")
		MFST B 1 A_WeaponOffset(10,3+32,WOF_INTERPOLATE)
		MFST B 1 A_WeaponOffset(20,8+32,WOF_INTERPOLATE)
		TNT1 A 1
		Goto Holder
		
	FistBack:
		MFST B 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
			A_OverlayFlags(OverlayID(),PSPF_ADDWEAPON,0);
		}
		MFST B 1 A_OverlayOffset(OverlayID(),20,8+32,WOF_INTERPOLATE)
		MFST B 1 A_OverlayOffset(OverlayID(),10,3+32,WOF_INTERPOLATE)
		MFST B 1 A_OverlayOffset(OverlayID(),0,32,WOF_INTERPOLATE)
		Goto FistIdle
	Retirement:
		MFST B 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0);
			A_Overlay(2,"FistBack");
		}
		MFST B 1 A_WeaponOffset(20,8+32,WOF_INTERPOLATE)
		MFST B 1 A_WeaponOffset(10,3+32,WOF_INTERPOLATE)
		MFST B 1 A_WeaponOffset(0,32,WOF_INTERPOLATE)
		Goto ReadyMain
	
	//Standard
	Holder:
		TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0)
		TNT1 A 0 A_JumpIfInventory("KenshiroTrigger",1,"AHTATATA")
		TNT1 A 0 A_JumpIfInventory("KleinerTrigger",1,"CLYDE")
		TNT1 A 0 A_JumpIf(GetCVar("RO_ComboMode"),"Randomness1")
		Goto Fisting
	Randomness1:
		TNT1 A 0 A_Jump(7,"AHTATATA","CLYDE")
		Goto Fisting
	Fisting:
		TNT1 A 0 {
			A_PlaySound("Weapons/MartySwing",1);
			if(CountInv("PunchSide")) { A_TakeInventory("PunchSide",1); A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0); }
			else					  { A_GiveInventory("PunchSide",1); A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1); }
			Return A_Jump(256,"Punch1","Punch2","Punch3");
		}
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "Holder")
		Goto Retirement
	Punch1:
		MFST A 1 A_WeaponOffset(196,155+32)
		MFST A 1 A_WeaponOffset(158,100+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(128,61+32,WOF_INTERPOLATE)
		MFST A 1 {
			A_WeaponOffset(116,64+32,WOF_INTERPOLATE);
			if(CountInv("PunchSide")) { A_CustomPunch(17,0,0,"MartyPunchPuffLeft",75+random(15,-15)); }
			else 					  { A_CustomPunch(17,0,0,"MartyPunchPuff",75+random(15,-15)); }
		}
		MFST A 1 A_WeaponOffset(111,81+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(124,111+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(144,147+32,WOF_INTERPOLATE)
		Goto PunchCont
	PunchCont:
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK, "AssKickery")
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "Holder")
		Goto Retirement
	Punch2:
		MFST A 1 A_WeaponOffset(196,155+32)
		MFST A 1 A_WeaponOffset(158,100+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(128,61+32,WOF_INTERPOLATE)
		MFST A 1 {
			A_WeaponOffset(127,65+32,WOF_INTERPOLATE);
			if(CountInv("PunchSide")) { A_CustomPunch(17,0,0,"MartyPunchPuffLeft",75+random(15,-15)); }
			else 					  { A_CustomPunch(17,0,0,"MartyPunchPuff",75+random(15,-15)); }
		}
		MFST A 1 A_WeaponOffset(144,91+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(163,125+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(180,158+32,WOF_INTERPOLATE)
		Goto PunchCont
	Punch3:
		MFST A 1 A_WeaponOffset(225,155+32)
		MFST A 1 A_WeaponOffset(190,107+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(136,69+32,WOF_INTERPOLATE)
		MFST A 1 {
			A_WeaponOffset(93,77+32,WOF_INTERPOLATE);
			if(CountInv("PunchSide")) { A_CustomPunch(17,0,0,"MartyPunchPuffLeft",75+random(15,-15)); }
			else 					  { A_CustomPunch(17,0,0,"MartyPunchPuff",75+random(15,-15)); }
		}
		MFST A 1 A_WeaponOffset(65,102+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(53,139+32,WOF_INTERPOLATE)
		MFST A 1 A_WeaponOffset(73,162+32,WOF_INTERPOLATE)
		Goto PunchCont
	 
	//Worldbreaker\BSOD Punch
	CLYDE:
		TNT1 A 50 {
			if(GetCvar("RO_QuakeRecoil")) { A_Quake(5,63,0,256,"none"); }
			A_TakeInventory("KleinerTrigger",1);
			A_PlaySound("Weapons/CLYDE",5,1.0,0,ATTN_NONE);
		}
		PNC4 A 1 { A_WeaponOffset(295,51+32); 				  if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.99); } }
		PNC4 A 1 { A_WeaponOffset(244,46+32,WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.98); } }
		PNC4 B 1 { A_WeaponOffset(217,50+32,WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.97); } }
		PNC4 B 1 { A_WeaponOffset(195,50+32,WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.95); } }
		PNC4 C 1 { A_WeaponOffset(157,52+32,WOF_INTERPOLATE); if(GetCvar("RO_ZoomRecoil")) { A_ZoomFactor(0.6); } }
		BSOD A 7 Bright A_WeaponOffset(0,32)
		TNT1 A 70 {
			if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(3,3,3,35,0,512,"none",QF_SCALEDOWN); }
			A_SetBlend("Blue",1,125);
			A_FireCustomMissile("Worldbreaker",0,0,0,0);
			A_ZoomFactor(1.0);
		}
		Goto Retirement

	//Kenshiro Wannabe
	AHTATATA:
		TNT1 A 0 {
			A_TakeInventory("KenshiroTrigger",1);
			A_PlaySound("weapons/AHTATATA",5);
			A_GiveInventory("AHTATATAPower");
			A_GiveInventory("MartyPunchCounter",112);
		}
	WAAAAH:
		TNT1 A 0 A_PlaySound("Weapons/MartySwing",1)
		TNT1 A 0 A_Jump(256,"TA1","TA2","TA3","TA4","TA5","TA6","TA7","TA8",
							"TA9","TA10","TA11","TA12","TA13","TA14","TA15",
							"TA16")
	TA1:
		MFST A 1 {
			A_WeaponOffset(167,133+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST A 1 {
			A_WeaponOffset(118,61+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA2:
		MFST A 1 {
			A_WeaponOffset(247,123+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST A 1 {
			A_WeaponOffset(179,48+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA3:
		MFST C 1 {
			A_WeaponOffset(7,139+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST C 1 {
			A_WeaponOffset(60,60+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA4:
		MFST C 1 {
			A_WeaponOffset(-76,136+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST C 1 {
			A_WeaponOffset(-17,57+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA5:
		MFST D 1 {
			A_WeaponOffset(-102,-92+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST D 1 {
			A_WeaponOffset(-22,-10+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA6:
		MFST D 1 {
			A_WeaponOffset(-48,-114+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST D 1 {
			A_WeaponOffset(36,-10+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA7:
		MFST E 1 {
			A_WeaponOffset(242,-105+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST E 1 {
			A_WeaponOffset(170,-17+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA8:
		MFST E 1 {
			A_WeaponOffset(177,-105+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST E 1 {
			A_WeaponOffset(115,-17+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA9:
		MFST F 1 {
			A_WeaponOffset(-107,128+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST F 1 {
			A_WeaponOffset(-7,78+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA10:
		MFST F 1 {
			A_WeaponOffset(-75,143+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST F 1 {
			A_WeaponOffset(34,104+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA11:
		MFST G 1 {
			A_WeaponOffset(287,108+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST G 1 {
			A_WeaponOffset(209,57+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA12:
		MFST G 1 {
			A_WeaponOffset(216,130+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST G 1 {
			A_WeaponOffset(149,105+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA13:
		MFST H 1 {
			A_WeaponOffset(-100,-81+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST H 1 {
			A_WeaponOffset(-29,-25+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA14:
		MFST H 1 {
			A_WeaponOffset(-115,-35+32);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST H 1 {
			A_WeaponOffset(-41,-6+32,WOF_INTERPOLATE);
			A_SetAngle(Angle - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA15:
		MFST I 1 {
			A_WeaponOffset(298,-73+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST I 1 {
			A_WeaponOffset(209,-21+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch - 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	TA16:
		MFST I 1 {
			A_WeaponOffset(291,-50+32);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		MFST I 1 {
			A_WeaponOffset(204,-11+32,WOF_INTERPOLATE);
			A_SetAngle(Angle + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch + 0.5*GetCvar("RO_WeaponRecoil"), SPF_INTERPOLATE);
		}
		TNT1 A 0 A_CustomPunch(45,0,0,"MartyPunchPuffAHTATATA",2048)
		Goto AHTATATACounter
	AHTATATACounter:
		TNT1 A 0 A_TakeInventory("MartyPunchCounter",1)
		TNT1 A 0 A_JumpIfInventory("MartyPunchCounter",1,"WAAAAH")
		TNT1 A 40 A_WeaponOffset(0,32)
		Goto Retirement
		
	//Kicking
	AltFire:
		MFST B 0 A_Overlay(2,"FistEnter")
		MFST B 1 A_WeaponOffset(10,3+32,WOF_INTERPOLATE)
		MFST B 1 A_WeaponOffset(20,8+32,WOF_INTERPOLATE)
		TNT1 A 1
		Goto AltHolder
	AltHolder:
		TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0)
		TNT1 A 0 A_JumpIfInventory("SpartaTrigger",1,"SPARTA")
		TNT1 A 0 A_JumpIfInventory("BicycleTrigger",1,"BICYCLE")
		TNT1 A 0 A_JumpIf(GetCVar("RO_ComboMode"),"Randomness2")
		Goto AssKickery
	Randomness2:
		TNT1 A 0 A_Jump(12,"SPARTA","BICYCLE")
		
	//Standard
	AssKickery:
		TNT1 A 0 {
			If(random(0,256) >= 224) { A_PlaySound("Weapons/MartyHoowah",2); }
			if(CountInv("PunchSide")) { A_TakeInventory("PunchSide",1); A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0); }
			else					  { A_GiveInventory("PunchSide",1); A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1); }
			A_Recoil(-10);
			A_PlaySound("weapons/MartySwing",1);
			Return A_Jump(256,"Kick1","Kick2","Kick3");
		}
	KickCont:
		TNT1 A 5 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "Holder")
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK, "AltHolder")
		Goto Retirement
	Kick1:
		MKCK D 1 A_WeaponOffset(218,161+32)
		MKCK D 1 A_WeaponOffset(195,141+32,WOF_INTERPOLATE)
		MKCK D 1 A_WeaponOffset(173,130+32,WOF_INTERPOLATE)
		MKCK A 1 {
			A_WeaponOffset(124,43+32);
			if(CountInv("PunchSide")) { A_CustomPunch(30,0,0,"MartyKickPuffDiagonalLeft",125+random(15,-15)); }
			else 					  { A_CustomPunch(30,0,0,"MartyKickPuffDiagonal",125+random(15,-15)); }
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
		} 
		MKCK A 1 A_WeaponOffset(100,54+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(75,73+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(52,109+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(32,153+32,WOF_INTERPOLATE)
		Goto KickCont
	Kick2:
		MKCK B 1 A_WeaponOffset(185,161+32)
		MKCK B 1 A_WeaponOffset(173,129+32,WOF_INTERPOLATE)
		MKCK B 1 A_WeaponOffset(154,106+32,WOF_INTERPOLATE)
		MKCK C 1 {
			A_WeaponOffset(124,42+32);
			if(CountInv("PunchSide")) { A_CustomPunch(30,0,0,"MartyKickPuffLeft",125+random(15,-15)); }
			else 					  { A_CustomPunch(30,0,0,"MartyKickPuff",125+random(15,-15)); }
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
		} 
		MKCK C 1 A_WeaponOffset(113,36+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(92,49+32,WOF_INTERPOLATE)
		MKCK B 1 A_WeaponOffset(60,110+32)
		MKCK B 1 A_WeaponOffset(43,128+32,WOF_INTERPOLATE)
		MKCK B 1 A_WeaponOffset(25,157+32,WOF_INTERPOLATE)
		Goto KickCont
	Kick3:
		MKCK A 1 A_WeaponOffset(302,109+32)
		MKCK A 1 A_WeaponOffset(241,86+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(188,76+32,WOF_INTERPOLATE)
		MKCK A 1 {
			A_WeaponOffset(129,63+32,WOF_INTERPOLATE);
			if(CountInv("PunchSide")) { A_CustomPunch(30,0,0,"MartyKickPuffDiagonalLeft",125+random(15,-15)); }
			else 					  { A_CustomPunch(30,0,0,"MartyKickPuffDiagonal",125+random(15,-15)); }
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
			A_CustomPunch(30,0,0,"MartyNullPuff",125+random(15,-15));
		} 
		MKCK A 1 A_WeaponOffset(70,69+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(23,78+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(-27,88+32,WOF_INTERPOLATE)
		MKCK A 1 A_WeaponOffset(-84,105+32,WOF_INTERPOLATE)
		Goto KickCont
	
	//Sparta Kick
	SPARTA:
		TNT1 A 0 {
			A_TakeInventory("SpartaTrigger",1);
			A_ChangeVelocity (Cos(Pitch) * 32, 0, Sin(Pitch) * -32, CVF_RELATIVE);
			A_PlaySound("Weapons/MartySwing",1);
			A_PlaySound("Weapons/SPARTA",5,1.0,0,ATTN_NONE);
			if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(4,4,4,10,0,512,"none",QF_SCALEUP); }
		}
		MKCK B 1 A_WeaponOffset(127,153+32)
		MKCK B 1 A_WeaponOffset(124,136+32,WOF_INTERPOLATE)
		MKCK B 1 A_WeaponOffset(120,109+32,WOF_INTERPOLATE)
		MKCK C 1 {
			A_WeaponOffset(123+frandom(3.0,-3.0),45+32+frandom(3.0,-3.0),WOF_INTERPOLATE);
			A_Blast(BF_AFFECTBOSSES|BF_DONTWARN, 3000, 512, 30, "MartyKickPuffSPARTA", 0); 
			A_CustomPunch(900,0,0,"MartyKickPuff",2048);
		}
		MKCK CCCCCCC 1 {
			A_WeaponOffset(123+frandom(3.0,-3.0),45+32+frandom(3.0,-3.0),WOF_INTERPOLATE);
			A_CustomPunch(900,0,0,"MartyNullPuff",2048);
		}
		
		MKCK C 18 { A_WeaponOffset(123,45+32); if(GetCvar("RO_QuakeRecoil")) { A_QuakeEx(4,4,4,15,0,512,"none",QF_SCALEDOWN); } }
		MKCK C 1 A_WeaponOffset(121,37+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(118,46+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(113,64+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(106,96+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(103,133+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(98,164+32,WOF_INTERPOLATE)
		TNT1 A 2
		Goto KickCont
	BICYCLE:
		TNT1 A 0 {
			A_TakeInventory("BicycleTrigger",1);
			A_GiveInventory("MartyKickCounter",4);
			A_GiveInventory("BicyclePower");
			A_PlaySound("Weapons/BICYCLE",5);
			A_ChangeFlag("NOGRAVITY",1);
			A_ChangeFlag("FLOAT",1);
		}
	BICYCLING:
		TNT1 A 0 {
			A_ChangeVelocity (Cos(Pitch) * 7, 0, Sin(Pitch) * -10, CVF_RELATIVE);
			A_PlaySound("Weapons/MartySwing",1);
		}
		MKCK B 1 A_WeaponOffset(127,153+32)
		MKCK B 1 A_WeaponOffset(120,109+32,WOF_INTERPOLATE)
		MKCK C 1  {
			A_WeaponOffset(123,45+32);
			A_CustomPunch(550,0,0,"MartyKickPuff",225+random(15,-15));
		}
		MKCK C 1 A_WeaponOffset(118,46+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(103,133+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(98,164+32,WOF_INTERPOLATE)
		
		TNT1 A 0 {
			A_ChangeVelocity (Cos(Pitch) * 7, 0, Sin(Pitch) * -10, CVF_RELATIVE);
			A_PlaySound("Weapons/MartySwing",1);
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		}
		MKCK B 1 A_WeaponOffset(127,153+32)
		MKCK B 1 A_WeaponOffset(120,109+32,WOF_INTERPOLATE)
		MKCK C 1  {
			A_WeaponOffset(123,45+32);
			A_CustomPunch(550,0,0,"MartyKickPuffLeft",225+random(15,-15));
		}
		MKCK C 1 A_WeaponOffset(118,46+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(103,133+32,WOF_INTERPOLATE)
		MKCK C 1 A_WeaponOffset(98,164+32,WOF_INTERPOLATE)
		
		TNT1 A 0 {
			A_ChangeFlag("NOGRAVITY",0);
			A_ChangeFlag("FLOAT",0);
			A_TakeInventory("MartyKickCounter",1);
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0);
			Return A_JumpIf(CountInv("MartyKickCounter"),"BICYCLING");
		}
		TNT1 A 2
		Goto KickCont
   }
}